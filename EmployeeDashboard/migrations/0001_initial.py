# Generated by Django 5.0.3 on 2024-11-14 10:03

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100)),
                ('middle_name', models.CharField(blank=True, max_length=100, null=True)),
                ('last_name', models.CharField(blank=True, max_length=100, null=True)),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='profile_pics/')),
                ('dob', models.DateField(blank=True, null=True, verbose_name='Date of Birth')),
                ('place_of_birth', models.CharField(blank=True, max_length=100, null=True)),
                ('employee_status', models.CharField(choices=[('Active', 'Active'), ('InActive', 'InActive')], max_length=15)),
                ('father_name', models.CharField(blank=True, max_length=100, null=True)),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female'), ('Other', 'Other')], max_length=10)),
                ('marital_status', models.CharField(choices=[('Single', 'Single'), ('Married', 'Married')], max_length=15)),
                ('nationality', models.CharField(blank=True, max_length=50, null=True)),
                ('blood_group', models.CharField(blank=True, max_length=3, null=True)),
                ('address', models.TextField(blank=True, null=True, verbose_name='Current Address')),
                ('city', models.CharField(blank=True, max_length=50, null=True)),
                ('state', models.CharField(blank=True, max_length=50, null=True)),
                ('zip_code', models.CharField(blank=True, max_length=10, null=True)),
                ('mobile', models.CharField(blank=True, max_length=20, null=True)),
                ('alternate_phone', models.CharField(blank=True, max_length=20, null=True)),
                ('personal_email', models.EmailField(max_length=254)),
                ('work_email', models.EmailField(max_length=254)),
                ('passport_no', models.CharField(blank=True, max_length=20, null=True)),
                ('passport_valid_from', models.DateField(blank=True, null=True)),
                ('passport_valid_upto', models.DateField(blank=True, null=True)),
                ('passport_file_upload', models.FileField(blank=True, null=True, upload_to='passport_docs/')),
                ('visa_file_upload', models.FileField(blank=True, null=True, upload_to='visa_docs/')),
                ('pan_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Name as on PAN')),
                ('pan_number', models.CharField(blank=True, max_length=10, null=True)),
                ('pan_upload_file', models.FileField(blank=True, null=True, upload_to='pan_docs/')),
                ('aadhar_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Name as on Aadhar')),
                ('aadhar_number', models.CharField(blank=True, max_length=12, null=True)),
                ('aadhar_file_upload', models.FileField(blank=True, null=True, upload_to='aadhar_docs/')),
                ('pf_member', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='No', max_length=3, verbose_name='Are you a member of PF?')),
                ('pf_number', models.CharField(blank=True, max_length=20, null=True)),
                ('pf_withdrawn', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='No', max_length=3, verbose_name='Have you withdrawn from previous PF account?')),
                ('uan_number', models.CharField(blank=True, max_length=20, null=True)),
                ('uan_confirmed', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='No', max_length=3)),
                ('active_visa', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='No', max_length=3)),
                ('employee_id', models.CharField(max_length=20, unique=True)),
                ('date_of_joining', models.DateField(blank=True, null=True)),
                ('exit_date', models.DateField(blank=True, null=True)),
                ('position', models.CharField(blank=True, max_length=50, null=True)),
                ('department', models.CharField(blank=True, max_length=50, null=True)),
                ('responsibilities', models.TextField(blank=True, null=True)),
                ('employment_type', models.CharField(choices=[('Full-time', 'Full-time'), ('Part-time', 'Part-time'), ('Contract', 'Contract')], max_length=15)),
                ('reporting_manager', models.CharField(blank=True, max_length=100, null=True)),
                ('job_location', models.CharField(blank=True, max_length=100, null=True)),
                ('work_schedule', models.CharField(blank=True, max_length=50, null=True)),
                ('skill_set', models.TextField(blank=True, null=True)),
                ('job_related_documents', models.FileField(blank=True, null=True, upload_to='job_docs/')),
                ('highest_degree', models.CharField(blank=True, max_length=50, null=True)),
                ('institution_name', models.CharField(blank=True, max_length=100, null=True)),
                ('field_of_study', models.CharField(blank=True, max_length=50, null=True)),
                ('year_of_graduation', models.IntegerField(blank=True, null=True)),
                ('certifications', models.FileField(blank=True, null=True, upload_to='certifications/')),
                ('previous_company_name', models.CharField(blank=True, max_length=100, null=True)),
                ('previous_job_title', models.CharField(blank=True, max_length=50, null=True)),
                ('previous_work_location', models.CharField(blank=True, max_length=100, null=True)),
                ('previous_start_date', models.DateField(blank=True, null=True)),
                ('previous_exit_date', models.DateField(blank=True, null=True)),
                ('previous_Total_work_experience', models.CharField(blank=True, max_length=20, null=True, verbose_name='Previous Experience (Enter in this format(2 years 3 months))')),
                ('previous_projects', models.TextField(blank=True, null=True)),
                ('previous_responsibilities', models.TextField(blank=True, null=True)),
                ('previous_achievements', models.TextField(blank=True, null=True)),
                ('reason_for_leaving', models.TextField(blank=True, null=True)),
                ('reference_1_name', models.CharField(blank=True, max_length=100, null=True)),
                ('reference_1_designation', models.CharField(blank=True, max_length=50, null=True)),
                ('reference_1_company_name', models.CharField(blank=True, max_length=100, null=True)),
                ('reference_1_contact', models.CharField(blank=True, max_length=20, null=True)),
                ('reference_1_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('reference_2_name', models.CharField(blank=True, max_length=100, null=True)),
                ('reference_2_designation', models.CharField(blank=True, max_length=50, null=True)),
                ('reference_2_company_name', models.CharField(blank=True, max_length=100, null=True)),
                ('reference_2_contact', models.CharField(blank=True, max_length=20, null=True)),
                ('reference_2_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('emergency_first_name', models.CharField(blank=True, max_length=100, null=True)),
                ('emergency_middle_name', models.CharField(blank=True, max_length=100, null=True)),
                ('emergency_last_name', models.CharField(blank=True, max_length=100, null=True)),
                ('emergency_relationship', models.CharField(blank=True, max_length=50, null=True)),
                ('emergency_home_phone', models.CharField(blank=True, max_length=20, null=True)),
                ('emergency_mobile_phone', models.CharField(blank=True, max_length=20, null=True)),
                ('emergency_city', models.CharField(blank=True, max_length=50, null=True)),
                ('emergency_state', models.CharField(blank=True, max_length=50, null=True)),
                ('emergency_zip_code', models.CharField(blank=True, max_length=10, null=True)),
                ('bank_name_on_account', models.CharField(blank=True, max_length=100, null=True, verbose_name='Name as on Bank Account')),
                ('bank_account_number', models.CharField(blank=True, max_length=20, null=True)),
                ('bank_name', models.CharField(blank=True, max_length=100, null=True)),
                ('bank_branch_name', models.CharField(blank=True, max_length=100, null=True)),
                ('bank_ifsc_code', models.CharField(blank=True, max_length=11, null=True)),
                ('bank_branch_address', models.TextField(blank=True, null=True)),
                ('passbook_file_upload', models.FileField(blank=True, null=True, upload_to='passbook_docs/')),
                ('offer_letter', models.FileField(blank=True, null=True, upload_to='employee_docs/offer_letters/')),
                ('nda_form', models.FileField(blank=True, null=True, upload_to='employee_docs/nda_forms/')),
                ('btech_memo', models.FileField(blank=True, null=True, upload_to='employee_docs/btech_memo/')),
                ('btech_tc', models.FileField(blank=True, null=True, upload_to='employee_docs/btech_tc/')),
                ('relieving_letter', models.FileField(blank=True, null=True, upload_to='employee_docs/relieving_letters/')),
                ('experience_letter', models.FileField(blank=True, null=True, upload_to='employee_docs/experience_letters/')),
                ('payslips', models.FileField(blank=True, null=True, upload_to='employee_docs/payslips/')),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('assigned_to', models.CharField(choices=[('Dev_TL', 'Development Team Lead'), ('Sales_TL', 'Sales Team Lead'), ('Content_TL', 'Content Moderator Team Lead'), ('Support_TL', 'Customer Support Team Lead')], default='Dev_TL', max_length=60)),
                ('created_by', models.CharField(max_length=150)),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('In Progress', 'In Progress'), ('Completed', 'Completed'), ('On Hold', 'On Hold')], default='Pending', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('due_date', models.DateTimeField()),
                ('priority', models.CharField(choices=[('Low', 'Low'), ('Medium', 'Medium'), ('High', 'High'), ('Urgent', 'Urgent')], default='Medium', max_length=20)),
                ('notes', models.TextField(blank=True, null=True)),
            ],
            options={
                'ordering': ['due_date', 'priority'],
            },
        ),
        migrations.CreateModel(
            name='TLTasks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('assigned_to', models.CharField(max_length=100)),
                ('assigned_by', models.CharField(max_length=100)),
                ('priority', models.CharField(choices=[('High', 'High'), ('Medium', 'Medium'), ('Low', 'Low')], max_length=20)),
                ('due_date', models.DateField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('In Progress', 'In Progress'), ('Completed', 'Completed')], default='Pending', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('department', models.CharField(blank=True, choices=[('development', 'Development'), ('teamlead_development', 'TeamLead_Development'), ('content_moderators', 'Content Moderators'), ('teamlead_content_moderators', 'TeamLead_Content Moderators'), ('sales_team', 'Sales Team'), ('teamlead_sales_team', 'TeamLead_Sales Team'), ('customer_support', 'Customer Support Team'), ('teamlead_customer_support', 'TeamLead_Customer Support Team')], max_length=30, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Leave',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('leave_type', models.CharField(max_length=50)),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('Approved', 'Approved'), ('Disapproved', 'Disapproved')], default='Pending', max_length=20)),
                ('reason', models.TextField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Lead',
            fields=[
                ('lead_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True)),
                ('company_name', models.CharField(blank=True, max_length=100, null=True)),
                ('position', models.CharField(blank=True, max_length=100, null=True)),
                ('lead_source', models.CharField(max_length=50)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('New', 'New'), ('Contacted', 'Contacted'), ('Qualified', 'Qualified'), ('Closed', 'Closed')], max_length=50)),
                ('interest_level', models.CharField(blank=True, choices=[('High', 'High'), ('Medium', 'Medium'), ('Low', 'Low')], max_length=50, null=True)),
                ('last_contact_date', models.DateTimeField(blank=True, null=True)),
                ('next_follow_up_date', models.DateTimeField(blank=True, null=True)),
                ('product_interest', models.CharField(blank=True, max_length=100, null=True)),
                ('estimated_deal_value', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='leads_created', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='DailyUpdateTaskForm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task_description', models.TextField()),
                ('date', models.DateField()),
                ('task_status', models.CharField(choices=[('completed', 'Completed'), ('in_progress', 'In Progress'), ('pending', 'Pending'), ('on_hold', 'On Hold')], max_length=30)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='EmployeeDashboard.project')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Break',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('break_start_time', models.TimeField()),
                ('break_end_time', models.TimeField()),
                ('reason', models.CharField(blank=True, max_length=100)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Attendance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('login_time', models.TimeField(blank=True, null=True)),
                ('logout_time', models.TimeField(blank=True, null=True)),
                ('break_time', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('total_working_hours', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('status', models.CharField(choices=[('Present', 'Present'), ('Absent', 'Absent'), ('On Leave', 'On Leave')], default='Absent', max_length=10)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
